import 'dart:async';
import 'package:barcode_reader_webassembly/barcode_reader_webassembly_constants.dart';
import 'package:barcode_reader_webassembly/barcode_reader_webassembly_handler.dart';
import 'package:barcode_reader_webassembly/barcode_reader_webassembly_platform.dart';
import 'package:barcode_reader_webassembly/barcode_reader_webassembly_web.dart';

/// It's a wrapper around the WebAssembly code that's generated by the `barcode_reader_webassembly`
/// package
class BarcodeReaderWebassemblyInterop extends BarcodeReaderWebassemblyPlatform {
  /// > Read a barcode from the stack of the scanner
  ///
  /// Args:
  ///   arguments (ReadBarcodeProps): The arguments passed to the method.
  @override
  Future<String> readBarcodeFromStack(ReadBarcodeProps readBarcodeProps) async {
    final barcodeChannelHandler = BarcodeReaderWebassemblyChannelHandler();

    /// It's converting the JavaScript Promise to a Dart Future.
    final barcode = await barcodeChannelHandler.sendMethodMessage(
      JsEvent.readBarcodeFromStack,
      readBarcodeProps,
    );
    return barcode;
  }

  /// It reads a barcode.
  ///
  /// Args:
  ///   readBarcodeProps (ReadBarcodeProps): This is a class that contains the properties for the
  /// barcode scanner.
  @override
  Future<String> readBarcode(ReadBarcodeProps readBarcodeProps) async {
    final barcodeChannelHandler = BarcodeReaderWebassemblyChannelHandler();

    /// It's converting the JavaScript Promise to a Dart Future.
    final barcode = await barcodeChannelHandler.sendMethodMessage(
      JsEvent.readBarcode,
      readBarcodeProps,
    );
    return barcode;
  }
}
